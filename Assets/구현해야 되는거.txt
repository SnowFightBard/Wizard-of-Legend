◆ 캐릭터

- 몬스터 AI 및 패턴
- 몬스터 피격모션 및 넉백
- 새 애니메이션 (새가 돌아다니다 플레이어가 근접하면 날아감) (WayPoint 써야할듯...?)

◆ 시스템
- 메인메뉴
- 설정
- 사운드
- 상점
- UI

◆ 맵 관련
- 던전 랜덤구조 생성
- 맵 높낮이
- 포탈
- 미니맵

◆ 기타
- 에셋 합치기
- 리소스 부족한 부분을 채울 방법

===================================================
===================================================

◆ 해결 된 부분
- 대쉬 (캐릭터 110 ~ 118 우측대쉬)
- 지형지물 충돌
- 캐릭터 발밑 에임방향 (리소스 구해야함)
- 스킬 구현
- 대화상자


◆ 해결중인 부분
- 스킬창 (끌어넣기 및 획득)


스크립테이블 오브젝트(및 기타 유니티 레퍼런스 기능) : https://funfunhanblog.tistory.com/81
목표 오브젝트 방향으로 회전하기 : https://robotree.tistory.com/7 , https://gnaseel.tistory.com/17
fsm : https://boycoding.tistory.com/262
스킬 구현 : https://you-rang.tistory.com/221
스킬 애니메이션 콜라이더 넣기 : https://gall.dcinside.com/mgallery/board/view/?id=game_dev&no=19826


- 인덱스
- 스킬 이름
- 사거리
- 대미지
- 시전시간
- 쿨타임

- 스킬의 방향을 어떻게 돌릴지 정하기 (리소스를 편집?  Rotate?)
- 스킬 모양에 맞게 콜라이더 넣기
- 마우스 방향으로 스킬 발동
- 마우스 방향으로 플레이어 공격 애니메이션 출력

===============================================================================================================================

◆ 스킬 구현 팁

[방법1]
1. 스킬이나 기타 리소스를 관리하는 스크립트를 하나 만들어줍니다.
2. 해당 리소스 관리하는 곳에 dictionary를 만들어서 키값으로 해당 리소스를 불러올 수 있도록 구성해줍니다.
3. GetResource(string Key) 이렇게 함수로 키값으로 데이터를 가지고 옵니다.
4. 데이터의 경우 하나의 키값에 많은데이터가 있을수 있게 구성합니다.
Dictionary<string, List<Sprite>> SpriteDic = new .. 이렇게 선언해주고 최초 생성시
SpriteDic.Add(키값, new List<Sprite>> 이렇게 구성해주시고 그다음부터는 해당 키값에 맞는 이미지를 List에 저장해주시면 됩니다.
이렇게 구성하시면 원하는 것을 불러올수 있습니다.
scriptableobject나 싱글톤등으로 선언하여 범용적으로 쓰일수 있도록 구성해줍니다
단, 주의하실건 한번쓰일거나 다른곳에서는 거의 쓰이지 않는 것은 넣지않는것이 최적화에 적절합니다.

[방법2]
그냥 스킬관련 슬롯 프리팹이라고 고정이라고 가정할때
해당 스킬 슬롯관련된 곳에 스크립트하나 넣고 거기에 해당 사용할 sprite들을 모두 넣어둡니다.
그리고 index와 enum값으로 해당 스킬의 type을 지정하고 해당 type에 맞는 이미지와 index를 저장하게 합니다.
그리고 해당 index에 맞는 스킬효과가 나가도로 구성하면됩니다.
가장 쉽고 간편하지만 먼가 수정이 일어나거나 범용적으로 쓰기에는 부족하지만 해당 스킬오브젝트에서만 작용하는
정보들을 관리한다는 측면에서 어떤 문제가 발생할때 이부분 먼저 보면되기에 직관적이라고 생각합니다.


구조체의 활용
public enum eSKILL
{
FIRE,ICE,
}

public struct ST_SKILLINFO
{
public eSKILL Type;// 키값
public Sprite sp;// 이미지

}
이렇게 구성하신다음
방법1과 함께 섞어쓰시면 편하게 사용할 수있습니다.

===============================================================================================================================